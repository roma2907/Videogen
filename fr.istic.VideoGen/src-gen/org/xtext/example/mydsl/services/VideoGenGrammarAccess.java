/*
 * generated by Xtext
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class VideoGenGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class VideoGenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VideoGen");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVideoGenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cVideosAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVideosVideoParserRuleCall_2_0 = (RuleCall)cVideosAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//VideoGen:
		//	"VideoGen" "{" videos+=Video* "}";
		@Override public ParserRule getRule() { return rule; }

		//"VideoGen" "{" videos+=Video* "}"
		public Group getGroup() { return cGroup; }

		//"VideoGen"
		public Keyword getVideoGenKeyword_0() { return cVideoGenKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//videos+=Video*
		public Assignment getVideosAssignment_2() { return cVideosAssignment_2; }

		//Video
		public RuleCall getVideosVideoParserRuleCall_2_0() { return cVideosVideoParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class VideoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Video");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMandatoryRuleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOptionnalRuleParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAlternativeRuleParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Video:
		//	MandatoryRule | OptionnalRule | AlternativeRule;
		@Override public ParserRule getRule() { return rule; }

		//MandatoryRule | OptionnalRule | AlternativeRule
		public Alternatives getAlternatives() { return cAlternatives; }

		//MandatoryRule
		public RuleCall getMandatoryRuleParserRuleCall_0() { return cMandatoryRuleParserRuleCall_0; }

		//OptionnalRule
		public RuleCall getOptionnalRuleParserRuleCall_1() { return cOptionnalRuleParserRuleCall_1; }

		//AlternativeRule
		public RuleCall getAlternativeRuleParserRuleCall_2() { return cAlternativeRuleParserRuleCall_2; }
	}

	public class MandatoryRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MandatoryRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMandatoryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSeqAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSeqVideoSeqMandatoryParserRuleCall_1_0 = (RuleCall)cSeqAssignment_1.eContents().get(0);
		
		//MandatoryRule:
		//	"mandatory" seq=VideoSeqMandatory;
		@Override public ParserRule getRule() { return rule; }

		//"mandatory" seq=VideoSeqMandatory
		public Group getGroup() { return cGroup; }

		//"mandatory"
		public Keyword getMandatoryKeyword_0() { return cMandatoryKeyword_0; }

		//seq=VideoSeqMandatory
		public Assignment getSeqAssignment_1() { return cSeqAssignment_1; }

		//VideoSeqMandatory
		public RuleCall getSeqVideoSeqMandatoryParserRuleCall_1_0() { return cSeqVideoSeqMandatoryParserRuleCall_1_0; }
	}

	public class OptionnalRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OptionnalRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOptionalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSeqAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSeqVideoSeqParserRuleCall_1_0 = (RuleCall)cSeqAssignment_1.eContents().get(0);
		
		//OptionnalRule:
		//	"optional" seq=VideoSeq;
		@Override public ParserRule getRule() { return rule; }

		//"optional" seq=VideoSeq
		public Group getGroup() { return cGroup; }

		//"optional"
		public Keyword getOptionalKeyword_0() { return cOptionalKeyword_0; }

		//seq=VideoSeq
		public Assignment getSeqAssignment_1() { return cSeqAssignment_1; }

		//VideoSeq
		public RuleCall getSeqVideoSeqParserRuleCall_1_0() { return cSeqVideoSeqParserRuleCall_1_0; }
	}

	public class AlternativeRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AlternativeRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAlternativesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAlternativesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAlternativesVideoSeqParserRuleCall_3_0 = (RuleCall)cAlternativesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AlternativeRule:
		//	"alternatives" id=ID "{" alternatives+=VideoSeq+ "}";
		@Override public ParserRule getRule() { return rule; }

		//"alternatives" id=ID "{" alternatives+=VideoSeq+ "}"
		public Group getGroup() { return cGroup; }

		//"alternatives"
		public Keyword getAlternativesKeyword_0() { return cAlternativesKeyword_0; }

		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }

		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//alternatives+=VideoSeq+
		public Assignment getAlternativesAssignment_3() { return cAlternativesAssignment_3; }

		//VideoSeq
		public RuleCall getAlternativesVideoSeqParserRuleCall_3_0() { return cAlternativesVideoSeqParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class VideoSeqElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VideoSeq");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVideoseqKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Assignment cUrlAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cUrlSTRINGTerminalRuleCall_2_0 = (RuleCall)cUrlAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cDescriptionAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_2_0 = (RuleCall)cDescriptionAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cProbabilityKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cColonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cProprobabilitePercentAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cProprobabilitePercentINTTerminalRuleCall_4_2_0 = (RuleCall)cProprobabilitePercentAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDurationKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cColonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cDureeSecondeAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cDureeSecondeINTTerminalRuleCall_5_2_0 = (RuleCall)cDureeSecondeAssignment_5_2.eContents().get(0);
		
		//VideoSeq:
		//	"videoseq" id=ID? url=STRING ("description" ":" description=STRING)? ("probability" ":" proprobabilitePercent=INT)?
		//	("duration" ":" dureeSeconde=INT)?;
		@Override public ParserRule getRule() { return rule; }

		//"videoseq" id=ID? url=STRING ("description" ":" description=STRING)? ("probability" ":" proprobabilitePercent=INT)?
		//("duration" ":" dureeSeconde=INT)?
		public Group getGroup() { return cGroup; }

		//"videoseq"
		public Keyword getVideoseqKeyword_0() { return cVideoseqKeyword_0; }

		//id=ID?
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }

		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }

		//url=STRING
		public Assignment getUrlAssignment_2() { return cUrlAssignment_2; }

		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_2_0() { return cUrlSTRINGTerminalRuleCall_2_0; }

		//("description" ":" description=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"description"
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }

		//":"
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }

		//description=STRING
		public Assignment getDescriptionAssignment_3_2() { return cDescriptionAssignment_3_2; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_2_0() { return cDescriptionSTRINGTerminalRuleCall_3_2_0; }

		//("probability" ":" proprobabilitePercent=INT)?
		public Group getGroup_4() { return cGroup_4; }

		//"probability"
		public Keyword getProbabilityKeyword_4_0() { return cProbabilityKeyword_4_0; }

		//":"
		public Keyword getColonKeyword_4_1() { return cColonKeyword_4_1; }

		//proprobabilitePercent=INT
		public Assignment getProprobabilitePercentAssignment_4_2() { return cProprobabilitePercentAssignment_4_2; }

		//INT
		public RuleCall getProprobabilitePercentINTTerminalRuleCall_4_2_0() { return cProprobabilitePercentINTTerminalRuleCall_4_2_0; }

		//("duration" ":" dureeSeconde=INT)?
		public Group getGroup_5() { return cGroup_5; }

		//"duration"
		public Keyword getDurationKeyword_5_0() { return cDurationKeyword_5_0; }

		//":"
		public Keyword getColonKeyword_5_1() { return cColonKeyword_5_1; }

		//dureeSeconde=INT
		public Assignment getDureeSecondeAssignment_5_2() { return cDureeSecondeAssignment_5_2; }

		//INT
		public RuleCall getDureeSecondeINTTerminalRuleCall_5_2_0() { return cDureeSecondeINTTerminalRuleCall_5_2_0; }
	}

	public class VideoSeqMandatoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VideoSeqMandatory");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVideoseqKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Assignment cUrlAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cUrlSTRINGTerminalRuleCall_2_0 = (RuleCall)cUrlAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cDescriptionAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_2_0 = (RuleCall)cDescriptionAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDurationKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cColonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cDureeSecondeAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cDureeSecondeINTTerminalRuleCall_4_2_0 = (RuleCall)cDureeSecondeAssignment_4_2.eContents().get(0);
		
		//VideoSeqMandatory:
		//	"videoseq" id=ID? url=STRING ("description" ":" description=STRING)? ("duration" ":" dureeSeconde=INT)?;
		@Override public ParserRule getRule() { return rule; }

		//"videoseq" id=ID? url=STRING ("description" ":" description=STRING)? ("duration" ":" dureeSeconde=INT)?
		public Group getGroup() { return cGroup; }

		//"videoseq"
		public Keyword getVideoseqKeyword_0() { return cVideoseqKeyword_0; }

		//id=ID?
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }

		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }

		//url=STRING
		public Assignment getUrlAssignment_2() { return cUrlAssignment_2; }

		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_2_0() { return cUrlSTRINGTerminalRuleCall_2_0; }

		//("description" ":" description=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"description"
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }

		//":"
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }

		//description=STRING
		public Assignment getDescriptionAssignment_3_2() { return cDescriptionAssignment_3_2; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_2_0() { return cDescriptionSTRINGTerminalRuleCall_3_2_0; }

		//("duration" ":" dureeSeconde=INT)?
		public Group getGroup_4() { return cGroup_4; }

		//"duration"
		public Keyword getDurationKeyword_4_0() { return cDurationKeyword_4_0; }

		//":"
		public Keyword getColonKeyword_4_1() { return cColonKeyword_4_1; }

		//dureeSeconde=INT
		public Assignment getDureeSecondeAssignment_4_2() { return cDureeSecondeAssignment_4_2; }

		//INT
		public RuleCall getDureeSecondeINTTerminalRuleCall_4_2_0() { return cDureeSecondeINTTerminalRuleCall_4_2_0; }
	}
	
	
	private final VideoGenElements pVideoGen;
	private final VideoElements pVideo;
	private final MandatoryRuleElements pMandatoryRule;
	private final OptionnalRuleElements pOptionnalRule;
	private final AlternativeRuleElements pAlternativeRule;
	private final VideoSeqElements pVideoSeq;
	private final VideoSeqMandatoryElements pVideoSeqMandatory;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public VideoGenGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pVideoGen = new VideoGenElements();
		this.pVideo = new VideoElements();
		this.pMandatoryRule = new MandatoryRuleElements();
		this.pOptionnalRule = new OptionnalRuleElements();
		this.pAlternativeRule = new AlternativeRuleElements();
		this.pVideoSeq = new VideoSeqElements();
		this.pVideoSeqMandatory = new VideoSeqMandatoryElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.VideoGen".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//VideoGen:
	//	"VideoGen" "{" videos+=Video* "}";
	public VideoGenElements getVideoGenAccess() {
		return pVideoGen;
	}
	
	public ParserRule getVideoGenRule() {
		return getVideoGenAccess().getRule();
	}

	//Video:
	//	MandatoryRule | OptionnalRule | AlternativeRule;
	public VideoElements getVideoAccess() {
		return pVideo;
	}
	
	public ParserRule getVideoRule() {
		return getVideoAccess().getRule();
	}

	//MandatoryRule:
	//	"mandatory" seq=VideoSeqMandatory;
	public MandatoryRuleElements getMandatoryRuleAccess() {
		return pMandatoryRule;
	}
	
	public ParserRule getMandatoryRuleRule() {
		return getMandatoryRuleAccess().getRule();
	}

	//OptionnalRule:
	//	"optional" seq=VideoSeq;
	public OptionnalRuleElements getOptionnalRuleAccess() {
		return pOptionnalRule;
	}
	
	public ParserRule getOptionnalRuleRule() {
		return getOptionnalRuleAccess().getRule();
	}

	//AlternativeRule:
	//	"alternatives" id=ID "{" alternatives+=VideoSeq+ "}";
	public AlternativeRuleElements getAlternativeRuleAccess() {
		return pAlternativeRule;
	}
	
	public ParserRule getAlternativeRuleRule() {
		return getAlternativeRuleAccess().getRule();
	}

	//VideoSeq:
	//	"videoseq" id=ID? url=STRING ("description" ":" description=STRING)? ("probability" ":" proprobabilitePercent=INT)?
	//	("duration" ":" dureeSeconde=INT)?;
	public VideoSeqElements getVideoSeqAccess() {
		return pVideoSeq;
	}
	
	public ParserRule getVideoSeqRule() {
		return getVideoSeqAccess().getRule();
	}

	//VideoSeqMandatory:
	//	"videoseq" id=ID? url=STRING ("description" ":" description=STRING)? ("duration" ":" dureeSeconde=INT)?;
	public VideoSeqMandatoryElements getVideoSeqMandatoryAccess() {
		return pVideoSeqMandatory;
	}
	
	public ParserRule getVideoSeqMandatoryRule() {
		return getVideoSeqMandatoryAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
