/*
 * generated by Xtext
 */
grammar InternalVideoGen;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.VideoGenGrammarAccess;

}

@parser::members {

 	private VideoGenGrammarAccess grammarAccess;
 	
    public InternalVideoGenParser(TokenStream input, VideoGenGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "VideoGen";	
   	}
   	
   	@Override
   	protected VideoGenGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleVideoGen
entryRuleVideoGen returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVideoGenRule()); }
	 iv_ruleVideoGen=ruleVideoGen 
	 { $current=$iv_ruleVideoGen.current; } 
	 EOF 
;

// Rule VideoGen
ruleVideoGen returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='VideoGen' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVideoGenAccess().getVideoGenKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVideoGenAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVideoGenAccess().getVideosVideoParserRuleCall_2_0()); 
	    }
		lv_videos_2_0=ruleVideo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVideoGenRule());
	        }
       		add(
       			$current, 
       			"videos",
        		lv_videos_2_0, 
        		"Video");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVideoGenAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleVideo
entryRuleVideo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVideoRule()); }
	 iv_ruleVideo=ruleVideo 
	 { $current=$iv_ruleVideo.current; } 
	 EOF 
;

// Rule Video
ruleVideo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVideoAccess().getMandatoryRuleParserRuleCall_0()); 
    }
    this_MandatoryRule_0=ruleMandatoryRule
    { 
        $current = $this_MandatoryRule_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVideoAccess().getOptionnalRuleParserRuleCall_1()); 
    }
    this_OptionnalRule_1=ruleOptionnalRule
    { 
        $current = $this_OptionnalRule_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVideoAccess().getAlternativeRuleParserRuleCall_2()); 
    }
    this_AlternativeRule_2=ruleAlternativeRule
    { 
        $current = $this_AlternativeRule_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMandatoryRule
entryRuleMandatoryRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMandatoryRuleRule()); }
	 iv_ruleMandatoryRule=ruleMandatoryRule 
	 { $current=$iv_ruleMandatoryRule.current; } 
	 EOF 
;

// Rule MandatoryRule
ruleMandatoryRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='mandatory' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMandatoryRuleAccess().getMandatoryKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMandatoryRuleAccess().getSeqVideoSeqMandatoryParserRuleCall_1_0()); 
	    }
		lv_seq_1_0=ruleVideoSeqMandatory		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMandatoryRuleRule());
	        }
       		set(
       			$current, 
       			"seq",
        		lv_seq_1_0, 
        		"VideoSeqMandatory");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOptionnalRule
entryRuleOptionnalRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOptionnalRuleRule()); }
	 iv_ruleOptionnalRule=ruleOptionnalRule 
	 { $current=$iv_ruleOptionnalRule.current; } 
	 EOF 
;

// Rule OptionnalRule
ruleOptionnalRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='optional' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOptionnalRuleAccess().getOptionalKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOptionnalRuleAccess().getSeqVideoSeqParserRuleCall_1_0()); 
	    }
		lv_seq_1_0=ruleVideoSeq		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionnalRuleRule());
	        }
       		set(
       			$current, 
       			"seq",
        		lv_seq_1_0, 
        		"VideoSeq");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAlternativeRule
entryRuleAlternativeRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAlternativeRuleRule()); }
	 iv_ruleAlternativeRule=ruleAlternativeRule 
	 { $current=$iv_ruleAlternativeRule.current; } 
	 EOF 
;

// Rule AlternativeRule
ruleAlternativeRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='alternatives' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAlternativeRuleAccess().getAlternativesKeyword_0());
    }
(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getAlternativeRuleAccess().getIdIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAlternativeRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAlternativeRuleAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAlternativeRuleAccess().getAlternatvesVideoSeqParserRuleCall_3_0()); 
	    }
		lv_alternatves_3_0=ruleVideoSeq		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlternativeRuleRule());
	        }
       		add(
       			$current, 
       			"alternatves",
        		lv_alternatves_3_0, 
        		"VideoSeq");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAlternativeRuleAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleVideoSeq
entryRuleVideoSeq returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVideoSeqRule()); }
	 iv_ruleVideoSeq=ruleVideoSeq 
	 { $current=$iv_ruleVideoSeq.current; } 
	 EOF 
;

// Rule VideoSeq
ruleVideoSeq returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='videoseq' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVideoSeqAccess().getVideoseqKeyword_0());
    }
(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getVideoSeqAccess().getIdIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVideoSeqRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"ID");
	    }

)
)?(
(
		lv_url_2_0=RULE_STRING
		{
			newLeafNode(lv_url_2_0, grammarAccess.getVideoSeqAccess().getUrlSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVideoSeqRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"url",
        		lv_url_2_0, 
        		"STRING");
	    }

)
)(	otherlv_3='description' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVideoSeqAccess().getDescriptionKeyword_3_0());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVideoSeqAccess().getColonKeyword_3_1());
    }
(
(
		lv_description_5_0=RULE_STRING
		{
			newLeafNode(lv_description_5_0, grammarAccess.getVideoSeqAccess().getDescriptionSTRINGTerminalRuleCall_3_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVideoSeqRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_5_0, 
        		"STRING");
	    }

)
))?(	otherlv_6='probability' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVideoSeqAccess().getProbabilityKeyword_4_0());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getVideoSeqAccess().getColonKeyword_4_1());
    }
(
(
		lv_proprobabilitePercent_8_0=RULE_INT
		{
			newLeafNode(lv_proprobabilitePercent_8_0, grammarAccess.getVideoSeqAccess().getProprobabilitePercentINTTerminalRuleCall_4_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVideoSeqRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"proprobabilitePercent",
        		lv_proprobabilitePercent_8_0, 
        		"INT");
	    }

)
))?(	otherlv_9='duration' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getVideoSeqAccess().getDurationKeyword_5_0());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getVideoSeqAccess().getColonKeyword_5_1());
    }
(
(
		lv_dureeSeconde_11_0=RULE_INT
		{
			newLeafNode(lv_dureeSeconde_11_0, grammarAccess.getVideoSeqAccess().getDureeSecondeINTTerminalRuleCall_5_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVideoSeqRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dureeSeconde",
        		lv_dureeSeconde_11_0, 
        		"INT");
	    }

)
))?)
;





// Entry rule entryRuleVideoSeqMandatory
entryRuleVideoSeqMandatory returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVideoSeqMandatoryRule()); }
	 iv_ruleVideoSeqMandatory=ruleVideoSeqMandatory 
	 { $current=$iv_ruleVideoSeqMandatory.current; } 
	 EOF 
;

// Rule VideoSeqMandatory
ruleVideoSeqMandatory returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='videoseq' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVideoSeqMandatoryAccess().getVideoseqKeyword_0());
    }
(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getVideoSeqMandatoryAccess().getIdIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVideoSeqMandatoryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"ID");
	    }

)
)?(
(
		lv_url_2_0=RULE_STRING
		{
			newLeafNode(lv_url_2_0, grammarAccess.getVideoSeqMandatoryAccess().getUrlSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVideoSeqMandatoryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"url",
        		lv_url_2_0, 
        		"STRING");
	    }

)
)(	otherlv_3='description' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVideoSeqMandatoryAccess().getDescriptionKeyword_3_0());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVideoSeqMandatoryAccess().getColonKeyword_3_1());
    }
(
(
		lv_description_5_0=RULE_STRING
		{
			newLeafNode(lv_description_5_0, grammarAccess.getVideoSeqMandatoryAccess().getDescriptionSTRINGTerminalRuleCall_3_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVideoSeqMandatoryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_5_0, 
        		"STRING");
	    }

)
))?(	otherlv_6='duration' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVideoSeqMandatoryAccess().getDurationKeyword_4_0());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getVideoSeqMandatoryAccess().getColonKeyword_4_1());
    }
(
(
		lv_dureeSeconde_8_0=RULE_INT
		{
			newLeafNode(lv_dureeSeconde_8_0, grammarAccess.getVideoSeqMandatoryAccess().getDureeSecondeINTTerminalRuleCall_4_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVideoSeqMandatoryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dureeSeconde",
        		lv_dureeSeconde_8_0, 
        		"INT");
	    }

)
))?)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


